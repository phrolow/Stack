
--------------------------------------------------
TXLib предупреждает:

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00457853 в функции main() в файле Y:/gthb/Stack/main.cpp на строке 16. Попытка записать данные по адресу NULL в модуле Y:\gthb\Stack\stack.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x9CC (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x00457853 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (16):

     14:     Elem_t value = 7;
     15: 
=>   16:     *stk1 = StackNew();
     17:     StackPush(stk1, 'w');
     18:     value = StackPop(stk1, &err);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 21:34:09, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 26 2022 21:34:21

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00457853 в функции main() в файле Y:/gthb/Stack/main.cpp на строке 16. Попытка записать данные по адресу NULL в модуле Y:\gthb\Stack\stack.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x9CC (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x00457853 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (16):

     14:     Elem_t value = 7;
     15: 
=>   16:     *stk1 = StackNew();
     17:     StackPush(stk1, 'w');
     18:     value = StackPop(stk1, &err);

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 21:34:09, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 26 2022 21:34:22

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x0042BCE0 в функции StackDump_() в файле Y:/gthb/Stack/stack.cpp на строке 73 в модуле Y:\gthb\Stack\stack.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x2EFC (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BCE0 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 1 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 2 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 3 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 4 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 5 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 6 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 7 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 8 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 9 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#10 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#11 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#12 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#13 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#14 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#15 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#16 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#17 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#18 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#19 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#20 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#21 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#22 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#23 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#24 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#25 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#26 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#27 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#28 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#29 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#30 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#31 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#32 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#33 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#34 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#35 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#36 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#37 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#38 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#39 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#40 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#41 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#42 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#43 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#44 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#45 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#46 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#47 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#48 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#49 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#50 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#51 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#52 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#53 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#54 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#55 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#56 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#57 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#58 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#59 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#60 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#61 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 22:03:34, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 26 2022 22:03:42

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: Ю-ху! Переполнение стека!

#1: Исключение EXCEPTION_STACK_OVERFLOW (0xC00000FD) при выполнении кода по адресу 0x0042BCE0 в функции StackDump_() в файле Y:/gthb/Stack/stack.cpp на строке 73 в модуле Y:\gthb\Stack\stack.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции _set_se_translator() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x2EFC (Main), GetLastError(): 126 (Не найден указанный модуль). 

--------------------------------------------------
Стек вызовов:

# 0 0x0042BCE0 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 1 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 2 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 3 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 4 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 5 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 6 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 7 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 8 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

# 9 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#10 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#11 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#12 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#13 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#14 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#15 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#16 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#17 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#18 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#19 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#20 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#21 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#22 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#23 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#24 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#25 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#26 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#27 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#28 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#29 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#30 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#31 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#32 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#33 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#34 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#35 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#36 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#37 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#38 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#39 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#40 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#41 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#42 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#43 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#44 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#45 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#46 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#47 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#48 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#49 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#50 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#51 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#52 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#53 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#54 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#55 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#56 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#57 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#58 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#59 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#60 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

#61 0x0042BD16 in Y:\gthb\Stack\stack.exe: StackDump_() at Y:/gthb/Stack/stack.cpp (73):

     71: 
     72: void StackDump_(struct Stack *stk, const char *func, const char *file, size_t line) {
=>   73:     ASSERT_OK(stk)
     74: 
     75:     FILE *fp = NULL;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 22:03:34, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 26 2022 22:03:42

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x1D38 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0043D0F2 in Y:\gthb\Stack\stack.exe: _txOnSignal() at y:/codeblocks/mingw/include/txlib.h (10992)
# 1 0x771671F1 in C:\Windows\System32\msvcrt.dll: raise()
# 2 0x7716B69B in C:\Windows\System32\msvcrt.dll: abort()

# 3 0x0042BC45 in Y:\gthb\Stack\stack.exe: StackDtor() at Y:/gthb/Stack/stack.cpp (59):

     57: 
     58: void StackDtor(struct Stack *stk) {
=>   59:     ASSERT_OK(stk)
     60: 
     61:     for(size_t i = 0; i <= stk->capacity; i++)

# 4 0x0045782B in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (20):

     18:     printf("%c", value);
     19: 
=>   20:     StackDtor(&stk1);
     21: 
     22:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 22:08:24, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 26 2022 22:08:36

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x3E7C (Main). 

--------------------------------------------------
Стек вызовов:

# 0 0x0043D1F6 in Y:\gthb\Stack\stack.exe: _txOnSignal() at y:/codeblocks/mingw/include/txlib.h (10992)
# 1 0x771671F1 in C:\Windows\System32\msvcrt.dll: raise()
# 2 0x7716B69B in C:\Windows\System32\msvcrt.dll: abort()

# 3 0x0042BCF1 in Y:\gthb\Stack\stack.exe: StackDtor() at Y:/gthb/Stack/stack.cpp (59):

     57: 
     58: void StackDtor(struct Stack *stk) {
=>   59:     ASSERT_OK(stk)
     60: 
     61:     for(size_t i = 0; i <= stk->capacity; i++)

# 4 0x0045792F in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (20):

     18:     printf("%c", value);
     19: 
=>   20:     StackDtor(&stk1);
     21: 
     22:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 22:31:36, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 26 2022 22:31:48

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057569C (32-bit), Flags: Cmdre0, Thread: 0x3AA4 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0043D1F6 in Y:\gthb\Stack\stack.exe: _txOnSignal() at y:/codeblocks/mingw/include/txlib.h (10992)
# 1 0x771671F1 in C:\Windows\System32\msvcrt.dll: raise()
# 2 0x7716B69B in C:\Windows\System32\msvcrt.dll: abort()

# 3 0x0042BCF1 in Y:\gthb\Stack\stack.exe: StackDtor() at Y:/gthb/Stack/stack.cpp (59):

     57: 
     58: void StackDtor(struct Stack *stk) {
=>   59:     ASSERT_OK(stk)
     60: 
     61:     for(size_t i = 0; i <= stk->capacity; i++)

# 4 0x0045792F in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (20):

     18:     printf("%c", value);
     19: 
=>   20:     StackDtor(&stk1);
     21: 
     22:     return 0;

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 26 2022 22:31:36, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 27 2022 06:08:30

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00457D04 в функции binary() в файле Y:/gthb/Stack/stack.cpp на строке 154. Попытка записать данные по адресу 0x00506156 в модуле Y:\gthb\Stack\stack.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057769C (32-bit), Flags: Cmdre0, Thread: 0xB68 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00457D04 in Y:\gthb\Stack\stack.exe: binary() at Y:/gthb/Stack/stack.cpp (154):

    152: 
    153:     while(n > 0) {
=>  154:         res[l - i] = (char) (n % 2 + '0');
    155:         n /= 2;
    156:         i++;

# 1 0x00457BBD in Y:\gthb\Stack\stack.exe: perror_() at Y:/gthb/Stack/stack.cpp (129):

    127:     FILE* fp = fopen(LOGSPATH, "a");
    128: 
=>  129:     fprintf(fp, "\n%s in %s at %s(%d)\n\n", binary(err), func, file, line);
    130: 
    131:     fclose(fp);

# 2 0x0045740A in Y:\gthb\Stack\stack.exe: StackPush() at Y:/gthb/Stack/stack.cpp (25):

     23: 
     24: int StackPush(struct Stack *stk, Elem_t value) {
=>   25:     ASSERT_OK(stk);
     26: 
     27:     if(stk->Size >= stk->capacity)

# 3 0x0042B9B3 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (17):

     15:     Elem_t value = 7;
     16: 
=>   17:     StackPush(&stk1, 'w');
     18:     StackPush(&stk1, 'a');
     19:     StackPush(&stk1, 's');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 28 2022 17:17:08, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 28 2022 17:19:37

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x00457D04 в функции binary() в файле Y:/gthb/Stack/stack.cpp на строке 154. Попытка записать данные по адресу 0x00506156 в модуле Y:\gthb\Stack\stack.exe. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057769C (32-bit), Flags: Cmdre0, Thread: 0xB68 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x00457D04 in Y:\gthb\Stack\stack.exe: binary() at Y:/gthb/Stack/stack.cpp (154):

    152: 
    153:     while(n > 0) {
=>  154:         res[l - i] = (char) (n % 2 + '0');
    155:         n /= 2;
    156:         i++;

# 1 0x00457BBD in Y:\gthb\Stack\stack.exe: perror_() at Y:/gthb/Stack/stack.cpp (129):

    127:     FILE* fp = fopen(LOGSPATH, "a");
    128: 
=>  129:     fprintf(fp, "\n%s in %s at %s(%d)\n\n", binary(err), func, file, line);
    130: 
    131:     fclose(fp);

# 2 0x0045740A in Y:\gthb\Stack\stack.exe: StackPush() at Y:/gthb/Stack/stack.cpp (25):

     23: 
     24: int StackPush(struct Stack *stk, Elem_t value) {
=>   25:     ASSERT_OK(stk);
     26: 
     27:     if(stk->Size >= stk->capacity)

# 3 0x0042B9B3 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (17):

     15:     Elem_t value = 7;
     16: 
=>   17:     StackPush(&stk1, 'w');
     18:     StackPush(&stk1, 'a');
     19:     StackPush(&stk1, 's');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 28 2022 17:17:08, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 28 2022 17:19:37

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057769C (32-bit), Flags: Cmdre0, Thread: 0x2D18 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0043CC26 in Y:\gthb\Stack\stack.exe: _txOnSignal() at y:/codeblocks/mingw/include/txlib.h (10992)
# 1 0x753D71F1 in C:\Windows\System32\msvcrt.dll: raise()
# 2 0x753DB69B in C:\Windows\System32\msvcrt.dll: abort()

# 3 0x0045740F in Y:\gthb\Stack\stack.exe: StackPush() at Y:/gthb/Stack/stack.cpp (25):

     23: 
     24: int StackPush(struct Stack *stk, Elem_t value) {
=>   25:     ASSERT_OK(stk);
     26: 
     27:     if(stk->Size >= stk->capacity)

# 4 0x0042B9B3 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (17):

     15:     Elem_t value = 7;
     16: 
=>   17:     StackPush(&stk1, 'w');
     18:     StackPush(&stk1, 'a');
     19:     StackPush(&stk1, 's');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 28 2022 17:23:20, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 28 2022 17:23:51

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib предупреждает:

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x75409820 в функции strlen(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057769C (32-bit), Flags: Cmdre0, Thread: 0x2E14 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x75409820 in C:\Windows\System32\msvcrt.dll: strlen()

# 1 0x00457BBD in Y:\gthb\Stack\stack.exe: perror_() at Y:/gthb/Stack/stack.cpp (129):

    127:     FILE* fp = fopen(LOGSPATH, "a");
    128: 
=>  129:     fprintf(fp, "\n%s in %s at %s(%d)\n\n", binary(err), func, file, line);
    130: 
    131:     fclose(fp);

# 2 0x0045740A in Y:\gthb\Stack\stack.exe: StackPush() at Y:/gthb/Stack/stack.cpp (25):

     23: 
     24: int StackPush(struct Stack *stk, Elem_t value) {
=>   25:     ASSERT_OK(stk);
     26: 
     27:     if(stk->Size >= stk->capacity)

# 3 0x0042B9B3 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (17):

     15:     Elem_t value = 7;
     16: 
=>   17:     StackPush(&stk1, 'w');
     18:     StackPush(&stk1, 'a');
     19:     StackPush(&stk1, 's');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 28 2022 17:35:27, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 28 2022 17:35:45

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (11, 0x00): SIGSEGV: Доступ по неверному указателю. Ставьте ассерты! 

Нарушение доступа к памяти.

#1: Исключение EXCEPTION_ACCESS_VIOLATION (0xC0000005) при выполнении кода по адресу 0x75409820 в функции strlen(). Попытка прочесть данные по адресу NULL в модуле C:\Windows\System32\msvcrt.dll. Спасибо _txVectoredExceptionHandler(), что сообщил. Люблю его <3

С помощью функции signal() вы можете сами обработать эту ошибку.

#2: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057769C (32-bit), Flags: Cmdre0, Thread: 0x2E14 (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x75409820 in C:\Windows\System32\msvcrt.dll: strlen()

# 1 0x00457BBD in Y:\gthb\Stack\stack.exe: perror_() at Y:/gthb/Stack/stack.cpp (129):

    127:     FILE* fp = fopen(LOGSPATH, "a");
    128: 
=>  129:     fprintf(fp, "\n%s in %s at %s(%d)\n\n", binary(err), func, file, line);
    130: 
    131:     fclose(fp);

# 2 0x0045740A in Y:\gthb\Stack\stack.exe: StackPush() at Y:/gthb/Stack/stack.cpp (25):

     23: 
     24: int StackPush(struct Stack *stk, Elem_t value) {
=>   25:     ASSERT_OK(stk);
     26: 
     27:     if(stk->Size >= stk->capacity)

# 3 0x0042B9B3 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (17):

     15:     Elem_t value = 7;
     16: 
=>   17:     StackPush(&stk1, 'w');
     18:     StackPush(&stk1, 'a');
     19:     StackPush(&stk1, 's');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 28 2022 17:35:27, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 28 2022 17:35:45

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------

--------------------------------------------------
TXLib соболезнует...

Программа: Y:\gthb\Stack\stack.exe,

ВНЕЗАПНО: signal (22, 0x00): SIGABRT: Аварийное завершение программы, вызвана функция abort(). 

С помощью функции signal() вы можете сами обработать эту ошибку.

#1: TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400], Instance: 0x0057769C (32-bit), Flags: Cmdre0, Thread: 0x2F4C (Main), GetLastError(): 183 (Невозможно создать файл, так как он уже существует). 

--------------------------------------------------
Стек вызовов:

# 0 0x0043CC26 in Y:\gthb\Stack\stack.exe: _txOnSignal() at y:/codeblocks/mingw/include/txlib.h (10992)
# 1 0x753D71F1 in C:\Windows\System32\msvcrt.dll: raise()
# 2 0x753DB69B in C:\Windows\System32\msvcrt.dll: abort()

# 3 0x0045740F in Y:\gthb\Stack\stack.exe: StackPush() at Y:/gthb/Stack/stack.cpp (25):

     23: 
     24: int StackPush(struct Stack *stk, Elem_t value) {
=>   25:     ASSERT_OK(stk);
     26: 
     27:     if(stk->Size >= stk->capacity)

# 4 0x0042B9B3 in Y:\gthb\Stack\stack.exe: main() at Y:/gthb/Stack/main.cpp (17):

     15:     Elem_t value = 7;
     16: 
=>   17:     StackPush(&stk1, 'w');
     18:     StackPush(&stk1, 'a');
     19:     StackPush(&stk1, 's');

--------------------------------------------------
Developed with:

The Dumb Artist Library (TX Library)
TXLib [Ver: 00173a, Rev: 171, Date: 2022-07-23 02:08:28 +0400]
Copyright (C) Ded (Ilya Dedinsky, http://txlib.ru) <mail@txlib.ru>
See license on: http://txlib.ru

TXLib file:	y:\codeblocks\mingw\include\txlib.h
Compiled:	Sep 28 2022 17:37:45, GNU g++ 4.8.1, std=201103L, MinGW Runtime 3.20, 32-bit, DEBUG
Started:	Sep 28 2022 17:37:58

Run file:	Y:\gthb\Stack\stack.exe
Directory:	Y:\gthb\Stack

--------------------------------------------------
